TVM Notes

References
http://www.cs.virginia.edu/~evans/cs216/guides/x86.html
http://ref.x86asm.net/coder.html
https://en.wikibooks.org/wiki/X86_Assembly


==
[*] rearranged memory map
[*] user data / code now starts at hw_programDataStart 0x11000
[*] Added shift left and right [shl and shr]
[*] added operations to clear various flags:
	clc=clear carry, clz=clear zero, cls=clear sign, clb=clear break
[*] add jump if carry clear - carry gets set if shift moves bit off the end.
==
[*] fix compare order
[*] add multiply and divide sys calls MUL=30, DIV=31
[*] add mouse coords at mem [505][506]
[*] add basic joystick (cursor keys and ctrs, shift) mapped to:
	up[510] down[511] left[512 right[513] fire1[514] fire2[515]
[*] fixed compare byte at address with byte (eg: cmp [511], 1)
==

[ ] left and right shift.
[ ] add instructions to clear equal and less than flags
[*] Allow comments using the ; character
[ ] Consume tab in web form -- how though?
[*] Make we form use fixed width font
[ ] draw compile output to web page
[ ] add basic input - cursor keys and mouse


[ ] add new opcodes:
	// Jumps
	[*] JE	equal
	[*] JNE	not equal
	[*] JG	greater
	[*] JGE	greater or equal
	[*] JL	less
	[*] JLE	less/equal
	// stack
	[ ] push all regs
	[ ] pop all regs
	// maths
	[ ] SUB
	[ ] mul
	[ ] div
	[ ] shl
	[ ] shr
	// logic
	[ ] xor
	[ ] or

	// misc
	[ ] xchg

	[ ] sa
	[ ] cwd
	[ ] sar


	[ ] in
	[ ] test



How to distinguish bytes and words inopcodes

mov byte [label], byte 123
push byte [addr]
pop word [addr]
cmp byte[addr], byte 0xff



Examples of new stuff:


// Divide syscall (sys 31)
// Mouse coords memory locasion [505],[506]
start:
mov r3,[505]  // Get mouse x pos
pushw r3
pushw word 32
sys 31        // divide mouse x by 32
popw r3       // retrieve result
mov [503],r3  // put result into BG colour
jmp start
